$LABEL Identifier;
$FORWARD FED_MRefalP_MParserU_SymP_NFunctionDeclarationD_ExpectEndSent;
$EXTERN FED_MRefalP_MParserU_CommonP_AddNewFunction;
$EXTERN MQualifiedNameP_Create;
$LABEL ScopeClass;
$LABEL Entry;
$EXTERN FED_MRefalP_MLexerP_NextToken;
$EXTERN MErrorP_AddUnexpected;
FED_MRefalP_MParserU_SymP_NFunctionDeclaration {
  t.IModule t.hErrorList t.Lexer (#Identifier t.SrcPos e.FnName )=
    <FED_MRefalP_MParserU_SymP_NFunctionDeclarationD_ExpectEndSent <FED_MRefalP_MParserU_CommonP_AddNewFunction t.IModule t.SrcPos <MQualifiedNameP_Create (e.FnName )>(#ScopeClass #Entry )t.hErrorList ><FED_MRefalP_MLexerP_NextToken t.Lexer >>;
  t.IModule t.hErrorList t.Lexer t.Unexpected =
    t.IModule <MErrorP_AddUnexpected t.hErrorList t.Unexpected 'function name' >t.Lexer t.Unexpected ;
}

$LABEL EndSent;
FED_MRefalP_MParserU_SymP_NFunctionDeclarationD_ExpectEndSent {
  t.IModule t.hErrorList t.Lexer (#EndSent t.SrcPos )=
    t.IModule t.hErrorList <FED_MRefalP_MLexerP_NextToken t.Lexer >;
  t.IModule t.hErrorList t.Lexer t.OtherToken =
    t.IModule <MErrorP_AddUnexpected t.hErrorList t.OtherToken 'semicolon' >t.Lexer t.OtherToken ;
}

$LABEL Directive;
$LABEL Import;
$EXTERN FED_MRefalP_MParserU_CommonP_NImportBlock;
$LABEL End;
$EXTERN FED_MRefalP_MParserU_CommonP_NModuleTailer;
$LABEL EndOfText;
$LABEL Success;
$EXTERN FED_MRefalP_MLexerP_Destroy;
FED_MRefalP_MParserU_SymP_NSymModuleBody {
  t.IModule t.hErrorList t.Lexer (#Directive t.SrcPos #Import )=
    <FED_MRefalP_MParserU_SymP_NSymModuleBody <FED_MRefalP_MParserU_CommonP_NImportBlock t.IModule t.hErrorList <FED_MRefalP_MLexerP_NextToken t.Lexer >>>;
  t.IModule t.hErrorList t.Lexer (#Directive t.SrcPos #Entry )=
    <FED_MRefalP_MParserU_SymP_NSymModuleBody <FED_MRefalP_MParserU_SymP_NFunctionDeclaration t.IModule t.hErrorList <FED_MRefalP_MLexerP_NextToken t.Lexer >>>;
  t.IModule t.hErrorList t.Lexer (#Directive t.SrcPos #End )=
    <FED_MRefalP_MParserU_CommonP_NModuleTailer t.IModule t.hErrorList t.Lexer (#Directive t.SrcPos #End )>;
  t.IModule t.hErrorList t.Lexer (#EndOfText t.SrcPos )=
    <MErrorP_AddUnexpected t.hErrorList (#EndOfText t.SrcPos )'import or function declaration' >#Success t.IModule <FED_MRefalP_MLexerP_Destroy t.Lexer >;
  t.IModule t.hErrorList t.Lexer t.Unexpected =
    <FED_MRefalP_MParserU_SymP_NSymModuleBody t.IModule <MErrorP_AddUnexpected t.hErrorList t.Unexpected 'import or function declaration' ><FED_MRefalP_MLexerP_NextToken t.Lexer >>;
}

$EXTERN FED_MRefalP_MParserU_CommonP_GeneralizeInfo;
$EXTERN FED_MRefalP_MParserU_CommonP_Parse;
$ENTRY FED_MRefalP_MParserU_SymP_SymModule {
  t.hErrorList t.QualifiedName e.FileName =
    <FED_MRefalP_MParserU_CommonP_GeneralizeInfo t.hErrorList t.QualifiedName <FED_MRefalP_MParserU_CommonP_Parse FED_MRefalP_MParserU_SymP_NSymModuleBody e.FileName >>;
}

FED_MRefalP_MParserU_SymP_FinalizeE_ {
  =
    ;
}

$EXTERN RegisterE_;
$ENTRY FED_MRefalP_MParserU_SymP_EntryPointE_ {
  =
    <RegisterE_ FED_MRefalP_MParserU_SymP_FinalizeE_ >;
}

