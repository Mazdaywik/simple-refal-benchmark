MSymTableP_UpdateAttribD_Aux {
  (s.NewAttrib e.NewValue )(s.NewAttrib e.Q_OldValue )e.Tail =
    (s.NewAttrib e.NewValue )e.Tail ;
  (s.NewAttrib e.NewValue )(s.OtherAttrib e.OtherValue )e.Tail =
    (s.OtherAttrib e.OtherValue )<MSymTableP_UpdateAttribD_Aux (s.NewAttrib e.NewValue )e.Tail >;
  (s.NewAttrib e.NewValue )=
    (s.NewAttrib e.NewValue );
}

$LABEL Found;
$EXTERN MSymTableP_UpdateAttrib;
$LABEL NoAttrib;
$LABEL NoName;
MSymTableP_SwGetAttrib {
  (e.Name )s.Attrib t.SymTable #Found e.Value =
    <MSymTableP_UpdateAttrib t.SymTable (e.Name )s.Attrib e.Value >#Found e.Value ;
  (e.Name )s.Attrib t.SymTable #NoAttrib =
    t.SymTable #NoAttrib ;
  (e.Name )s.Attrib t.SymTable #NoName =
    t.SymTable #NoName ;
}

$ENUM MSymTableP_SymTable;
MSymTableP_DoExtractNames {
  [MSymTableP_SymTable e.Scanned ](e.Names )((e.NextName )e.Attribs )e.NotScanned =
    <MSymTableP_DoExtractNames [MSymTableP_SymTable e.Scanned ((e.NextName )e.Attribs )](e.Names (e.NextName ))e.NotScanned >;
  t.SymTable (e.Names )=
    t.SymTable e.Names ;
}

$FORWARD MSymTableP_DoFindByKindD_Aux;
$EXTERN MSymTableP_GetAttrib;
$LABEL Kind;
MSymTableP_DoFindByKind {
  t.SymTable e.Names (e.NextName )s.Kind =
    <MSymTableP_DoFindByKindD_Aux <MSymTableP_GetAttrib t.SymTable e.NextName #Kind >e.Names (e.NextName )s.Kind >;
  t.SymTable s.Kind =
    t.SymTable ;
}

MSymTableP_DoFindByKindD_Aux {
  t.SymTable #Found s.Kind e.Names (e.NextName )s.Kind =
    <MSymTableP_DoFindByKind t.SymTable e.Names s.Kind >(e.NextName );
  t.SymTable #Found s.Kind1 e.Names (e.Q_NextName )s.Kind2 =
    <MSymTableP_DoFindByKind t.SymTable e.Names s.Kind2 >;
}

$ENTRY MSymTableP_Create {
  =
    [MSymTableP_SymTable ];
}

$LABEL Unknown;
$ENTRY MSymTableP_AddName {
  [MSymTableP_SymTable e.NamesD_B ((e.Name )e.Attribs )e.NamesD_E ]e.Name =
    [MSymTableP_SymTable e.NamesD_B ((e.Name )e.Attribs )e.NamesD_E ];
  [MSymTableP_SymTable e.Names ]e.NewName =
    [MSymTableP_SymTable e.Names ((e.NewName )(#Kind #Unknown ))];
}

$ENTRY MSymTableP_UpdateAttrib {
  [MSymTableP_SymTable e.NamesD_B ((e.Name )e.Attribs )e.NamesD_E ](e.Name )s.Attrib e.Value =
    [MSymTableP_SymTable e.NamesD_B ((e.Name )<MSymTableP_UpdateAttribD_Aux (s.Attrib e.Value )e.Attribs >)e.NamesD_E ];
  t.SymTable (e.Name )s.Attrib e.Value =
    <MSymTableP_UpdateAttrib <MSymTableP_AddName t.SymTable e.Name >(e.Name )s.Attrib e.Value >;
}

$ENTRY MSymTableP_RemoveAttrib {
  [MSymTableP_SymTable e.NamesD_B ((e.Name )e.AttribsD_B (#Kind s.Value )e.AttribsD_E )e.NamesD_E ]e.Name #Kind =
    [MSymTableP_SymTable ((e.Name )(#Kind s.Value )e.AttribsD_B e.AttribsD_E )e.NamesD_B e.NamesD_E ]#Found s.Value ;
  [MSymTableP_SymTable e.NamesD_B ((e.Name )e.AttribsD_B (s.Attrib e.Value )e.AttribsD_E )e.NamesD_E ]e.Name s.Attrib =
    [MSymTableP_SymTable ((e.Name )e.AttribsD_B e.AttribsD_E )e.NamesD_B e.NamesD_E ]#Found e.Value ;
  [MSymTableP_SymTable e.NamesD_B ((e.Name )e.Attribs )e.NamesD_E ]e.Name s.Q_Attrib =
    [MSymTableP_SymTable ((e.Name )e.Attribs )e.NamesD_B e.NamesD_E ]#NoAttrib ;
  [MSymTableP_SymTable e.Names ]e.Q_Name s.Q_Attrib =
    [MSymTableP_SymTable e.Names ]#NoName ;
}

$ENTRY MSymTableP_GetAttrib {
  t.SymTable e.Name s.Attrib =
    <MSymTableP_SwGetAttrib (e.Name )s.Attrib <MSymTableP_RemoveAttrib t.SymTable e.Name s.Attrib >>;
}

$ENTRY MSymTableP_ExtractNames {
  [MSymTableP_SymTable e.Names ]=
    <MSymTableP_DoExtractNames [MSymTableP_SymTable ]()e.Names >;
}

$ENTRY MSymTableP_Destroy {
  [MSymTableP_SymTable e.Names ]=
    ;
}

$ENTRY MSymTableP_UpdateAttribSet {
  t.SymTable (e.Name )(s.Attrib e.Value )=
    <MSymTableP_UpdateAttrib t.SymTable (e.Name )s.Attrib e.Value >;
  t.SymTable (e.Name )(s.Attrib e.Value )e.Tail =
    <MSymTableP_UpdateAttribSet <MSymTableP_UpdateAttrib t.SymTable (e.Name )s.Attrib e.Value >(e.Name )e.Tail >;
}

$ENTRY MSymTableP_FindByKind {
  t.SymTable s.Kind =
    <MSymTableP_DoFindByKind <MSymTableP_ExtractNames t.SymTable >s.Kind >;
}

MSymTableP_FinalizeE_ {
  =
    ;
}

$EXTERN RegisterE_;
$ENTRY MSymTableP_EntryPointE_ {
  =
    <RegisterE_ MSymTableP_FinalizeE_ >;
}

