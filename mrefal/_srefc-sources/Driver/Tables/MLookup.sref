$EXTERN MStringsP_Upper;
$EXTERN MQualifiedNameP_Parse;
DriverP_TablesP_MLookupP_ExplodeD_NoCase {
  t.ImportName =
    <MStringsP_Upper <MQualifiedNameP_Parse t.ImportName >>;
}

$FORWARD DriverP_TablesP_MLookupP_ExplodeD_CanonicalD_Aux;
$EXTERN MFileSystemP_CanonicalPathD_Pt;
$LABEL Relative;
DriverP_TablesP_MLookupP_ExplodeD_Canonical {
  t.ImportName =
    <DriverP_TablesP_MLookupP_ExplodeD_CanonicalD_Aux <MFileSystemP_CanonicalPathD_Pt (#Relative )<MQualifiedNameP_Parse t.ImportName >>>;
}

DriverP_TablesP_MLookupP_ExplodeD_CanonicalD_Aux {
  (#Relative )e.Canonical =
    e.Canonical ;
}

DriverP_TablesP_MLookupP_ExplodeD_Case {
  t.ImportName =
    <MQualifiedNameP_Parse t.ImportName >;
}

$ENUM DriverP_TablesP_MLookupP_LookupTable;
$LABEL Error;
$LABEL TreeD_ModulePacket;
$LABEL ErrorD_CantLoadModule;
$LABEL Unknown;
DriverP_TablesP_MLookupP_LookupResultD_Aux {
  [DriverP_TablesP_MLookupP_LookupTable (e.MPD_ErrorsD_B (e.NoCaseName (s.Conflict t.KnownName ))e.MPD_ErrorsD_E )(e.CantLoadD_Errors )(e.Detailed )](e.NoCaseName )(e.CanonicalName )(e.CaseName )=
    [DriverP_TablesP_MLookupP_LookupTable (e.MPD_ErrorsD_B (e.NoCaseName (s.Conflict t.KnownName ))e.MPD_ErrorsD_E )(e.CantLoadD_Errors )(e.Detailed )]#Error #TreeD_ModulePacket s.Conflict t.KnownName ;
  [DriverP_TablesP_MLookupP_LookupTable (e.ModulePacketD_Errors )(e.CLD_ErrorsD_B (e.CanonicalName )e.CLD_ErrorsD_E )(e.Detailed )](e.NoCaseName )(e.CanonicalName )(e.CaseName )=
    [DriverP_TablesP_MLookupP_LookupTable (e.ModulePacketD_Errors )(e.CLD_ErrorsD_B (e.CanonicalName )e.CLD_ErrorsD_E )(e.Detailed )]#Error #ErrorD_CantLoadModule ;
  [DriverP_TablesP_MLookupP_LookupTable (e.ModulePacketD_Errors )(e.CantLoadD_Errors )(e.DetailedD_B (e.CaseName (e.Result ))e.DetailedD_E )](e.NoCaseName )(e.CanonicalName )(e.CaseName )=
    [DriverP_TablesP_MLookupP_LookupTable (e.ModulePacketD_Errors )(e.CantLoadD_Errors )(e.DetailedD_B (e.CaseName (e.Result ))e.DetailedD_E )]e.Result ;
  [DriverP_TablesP_MLookupP_LookupTable (e.MPD_Errors )(e.CLD_Errors )(e.Detailed )](e.NoCaseName )(e.CanonicalName )(e.CaseName )=
    [DriverP_TablesP_MLookupP_LookupTable (e.MPD_Errors )(e.CLD_Errors )(e.Detailed )]#Unknown ;
}

DriverP_TablesP_MLookupP_AddDetailed {
  [DriverP_TablesP_MLookupP_LookupTable (e.MPD_Errors )(e.CLD_Errors )(e.Detailed )]t.ImportName t.Error =
    [DriverP_TablesP_MLookupP_LookupTable (e.MPD_Errors )(e.CLD_Errors )((<DriverP_TablesP_MLookupP_ExplodeD_Case t.ImportName >t.Error )e.Detailed )];
}

$ENTRY DriverP_TablesP_MLookupP_Create {
  =
    [DriverP_TablesP_MLookupP_LookupTable ()()()];
}

$ENTRY DriverP_TablesP_MLookupP_Destroy {
  [DriverP_TablesP_MLookupP_LookupTable (e.ModulePacketErrors )(e.CantLoadErrors )(e.Detailed )]=
    ;
}

$ENTRY DriverP_TablesP_MLookupP_LookupResult {
  t.hLookupTable t.ImportName =
    <DriverP_TablesP_MLookupP_LookupResultD_Aux t.hLookupTable (<DriverP_TablesP_MLookupP_ExplodeD_NoCase t.ImportName >)(<DriverP_TablesP_MLookupP_ExplodeD_Canonical t.ImportName >)(<DriverP_TablesP_MLookupP_ExplodeD_Case t.ImportName >)>;
}

$LABEL Success;
$ENTRY DriverP_TablesP_MLookupP_AddSuccessImport {
  t.hLookupTable t.ImportName =
    <DriverP_TablesP_MLookupP_AddDetailed t.hLookupTable t.ImportName (#Success )>;
}

$ENTRY DriverP_TablesP_MLookupP_AddErrorD_CantLoadModule {
  [DriverP_TablesP_MLookupP_LookupTable (e.MPD_Errors )(e.CLD_Errors )(e.Detailed )]t.ImportName =
    [DriverP_TablesP_MLookupP_LookupTable (e.MPD_Errors )((<DriverP_TablesP_MLookupP_ExplodeD_Canonical t.ImportName >)e.CLD_Errors )(e.Detailed )];
}

$LABEL MismatchWithInternal;
$ENTRY DriverP_TablesP_MLookupP_AddErrorD_MismatchWithInternal {
  t.hLookupTable t.ImportName t.InternalName =
    <DriverP_TablesP_MLookupP_AddDetailed t.hLookupTable t.ImportName (#Error #MismatchWithInternal t.InternalName )>;
}

$ENTRY DriverP_TablesP_MLookupP_AddErrorD_TreeD_ModulePacket {
  [DriverP_TablesP_MLookupP_LookupTable (e.MPD_Errors )(e.CLD_Errors )(e.Detailed )]t.ImportName s.Conflict t.KnownName =
    [DriverP_TablesP_MLookupP_LookupTable ((<DriverP_TablesP_MLookupP_ExplodeD_NoCase t.ImportName >(#Error s.Conflict t.KnownName ))e.MPD_Errors )(e.CLD_Errors )(e.Detailed )];
}

$LABEL ErrorD_TreeD_CaseError;
$ENTRY DriverP_TablesP_MLookupP_AddErrorD_TreeD_CaseError {
  t.hLookupTable t.ImportName t.ValidCaseName =
    <DriverP_TablesP_MLookupP_AddDetailed t.hLookupTable t.ImportName (#Error #ErrorD_TreeD_CaseError t.ValidCaseName )>;
}

DriverP_TablesP_MLookupP_FinalizeE_ {
  =
    ;
}

$EXTERN RegisterE_;
$ENTRY DriverP_TablesP_MLookupP_EntryPointE_ {
  =
    <RegisterE_ DriverP_TablesP_MLookupP_FinalizeE_ >;
}

