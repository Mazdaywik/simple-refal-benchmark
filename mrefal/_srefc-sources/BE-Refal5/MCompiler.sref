$FORWARD BED_Refal5P_MCompilerP_SaveModule;
$EXTERN MVersionP_ROut;
$FORWARD BED_Refal5P_MCompilerP_ModuleToBack;
$FORWARD BED_Refal5P_MCompilerP_GenerateContent;
BED_Refal5P_MCompilerP_ProfiledD_Generate {
  t.IModule e.OutName =
    <BED_Refal5P_MCompilerP_SaveModule (e.OutName )('v ' <MVersionP_ROut >)('r file ' e.OutName )()<BED_Refal5P_MCompilerP_ModuleToBack <BED_Refal5P_MCompilerP_GenerateContent t.IModule >>>;
}

BED_Refal5P_MCompilerP_ModuleToBack {
  t.IModule e.Lines =
    e.Lines t.IModule ;
}

$EXTERN MFileIOP_Save;
BED_Refal5P_MCompilerP_SaveModule {
  (e.OutName )e.Lines t.IModule =
    <MFileIOP_Save (e.OutName )e.Lines >t.IModule ;
}

$FORWARD BED_Refal5P_MCompilerP_GenerateContentD_EntryPoints;
$EXTERN MIModuleP_GetEntryPoint;
BED_Refal5P_MCompilerP_GenerateContent {
  t.hIModule =
    <BED_Refal5P_MCompilerP_GenerateContentD_EntryPoints <MIModuleP_GetEntryPoint t.hIModule >>;
}

$LABEL Go;
$LABEL Result;
$FORWARD BED_Refal5P_MCompilerP_GenerateElements;
$FORWARD BED_Refal5P_MCompilerP_GenerateExpression;
$LABEL Regular;
$LABEL None;
$FORWARD BED_Refal5P_MCompilerP_GenFinalizer;
$EXTERN MIModuleP_GetModuleName;
BED_Refal5P_MCompilerP_GenerateContentD_EntryPoints {
  t.hIModule #Go (#Result e.Expr )=
    <BED_Refal5P_MCompilerP_GenerateElements t.hIModule >('e ' <BED_Refal5P_MCompilerP_GenerateExpression e.Expr >);
  t.hIModule #Regular #None #None =
    <BED_Refal5P_MCompilerP_GenerateElements t.hIModule >;
  t.hIModule #Regular (#Result e.InitCode )#None =
    <BED_Refal5P_MCompilerP_GenerateElements t.hIModule >('e ' <BED_Refal5P_MCompilerP_GenerateExpression e.InitCode >);
  t.hIModule #Regular t.InitCode (#Result e.FinalCode )=
    <BED_Refal5P_MCompilerP_GenFinalizer <MIModuleP_GetModuleName t.hIModule >t.InitCode (#Result e.FinalCode )>;
}

$FORWARD BED_Refal5P_MCompilerP_GenFinalizerD_Aux;
$FORWARD BED_Refal5P_MCompilerP_HashedName;
$FORWARD BED_Refal5P_MCompilerP_QualifiedToLine;
BED_Refal5P_MCompilerP_GenFinalizer {
  t.hIModule t.ModuleName t.InitCode (#Result e.FinalCode )=
    <BED_Refal5P_MCompilerP_GenerateElements t.hIModule ><BED_Refal5P_MCompilerP_GenFinalizerD_Aux (<BED_Refal5P_MCompilerP_HashedName 'Entry' <BED_Refal5P_MCompilerP_QualifiedToLine t.ModuleName >'::__Finalizer' >)t.InitCode e.FinalCode >;
}

$FORWARD BED_Refal5P_MCompilerP_GenFinalizerD_Function;
BED_Refal5P_MCompilerP_GenFinalizerD_Aux {
  (e.FinalizerName )#None e.FinalCode =
    <BED_Refal5P_MCompilerP_GenFinalizerD_Function (e.FinalizerName )e.FinalCode >('e <Br Finalizers \'=\' $' e.FinalizerName '$ >' );
  (e.FinalizerName )(#Result e.InitCode )e.FinalCode =
    <BED_Refal5P_MCompilerP_GenFinalizerD_Function (e.FinalizerName )e.FinalCode >('e ' <BED_Refal5P_MCompilerP_GenerateExpression e.InitCode >' <Br Finalizers \'=\' $' e.FinalizerName '$ >' );
}

BED_Refal5P_MCompilerP_GenFinalizerD_Function {
  (e.FinalizerName )e.FinalCode =
    ('b ' e.FinalizerName )('c $' e.FinalizerName '$ {' )('c \t= ' <BED_Refal5P_MCompilerP_GenerateExpression e.FinalCode >' ;' )('c }' );
}

$EXTERN MLambdaP_MapReduce;
$FORWARD BED_Refal5P_MCompilerP_GenerateElement;
$EXTERN MIModuleP_GetFunctionList;
BED_Refal5P_MCompilerP_GenerateElements {
  t.IModule =
    <MLambdaP_MapReduce BED_Refal5P_MCompilerP_GenerateElement <MIModuleP_GetFunctionList t.IModule >>;
}

$FORWARD BED_Refal5P_MCompilerP_GenerateElementD_Aux;
$EXTERN MIModuleP_AbsolutName;
BED_Refal5P_MCompilerP_GenerateElement {
  t.hIModule t.NextFnName =
    <BED_Refal5P_MCompilerP_GenerateElementD_Aux <MIModuleP_AbsolutName t.hIModule t.NextFnName >t.NextFnName >;
}

$FORWARD BED_Refal5P_MCompilerP_SwGenerateElement;
$EXTERN MIModuleP_GetFunctionAttribute;
$LABEL ScopeClass;
BED_Refal5P_MCompilerP_GenerateElementD_Aux {
  t.IModule t.QualifiedName t.FnName =
    <BED_Refal5P_MCompilerP_SwGenerateElement <MIModuleP_GetFunctionAttribute t.IModule #ScopeClass t.FnName >t.QualifiedName t.FnName >;
}

$LABEL Found;
$LABEL Swap;
$FORWARD BED_Refal5P_MCompilerP_GenerateSwap;
$FORWARD BED_Refal5P_MCompilerP_GenerateFunction;
BED_Refal5P_MCompilerP_SwGenerateElement {
  t.IModule #Found #Swap t.SwapName t.FnName =
    t.IModule <BED_Refal5P_MCompilerP_GenerateSwap t.SwapName >;
  t.IModule #Found s.FnScopeClass t.FnName t.PlainFnName =
    <BED_Refal5P_MCompilerP_GenerateFunction t.IModule s.FnScopeClass t.FnName t.PlainFnName >;
}

$FORWARD BED_Refal5P_MCompilerP_XQualifiedToLine;
BED_Refal5P_MCompilerP_GenerateSwap {
  t.SwapName =
    ('b ' <BED_Refal5P_MCompilerP_XQualifiedToLine #Swap t.SwapName >)('c $' <BED_Refal5P_MCompilerP_XQualifiedToLine #Swap t.SwapName >'$ {' )('c \te.$Index::NewValue$ =' )('c \t\t<Dg (\'' <BED_Refal5P_MCompilerP_QualifiedToLine t.SwapName >'\')>' )('c \t\t<Br (\'' <BED_Refal5P_MCompilerP_QualifiedToLine t.SwapName >'\') \'=\' e.$Index::NewValue$ >;' )('c }' )();
}

$FORWARD BED_Refal5P_MCompilerP_GenerateFunctionD_Aux;
$LABEL Body;
BED_Refal5P_MCompilerP_GenerateFunction {
  t.IModule s.FnScopeClass t.QualifiedName t.FnName =
    <BED_Refal5P_MCompilerP_GenerateFunctionD_Aux s.FnScopeClass t.QualifiedName <MIModuleP_GetFunctionAttribute t.IModule #Body t.FnName >>;
}

$FORWARD BED_Refal5P_MCompilerP_GenerateFnHeader;
$FORWARD BED_Refal5P_MCompilerP_GenerateFnBody;
BED_Refal5P_MCompilerP_GenerateFunctionD_Aux {
  s.FnScopeClass t.QualifiedName t.IModule #Found (e.Sentences )=
    t.IModule <BED_Refal5P_MCompilerP_GenerateFnHeader s.FnScopeClass t.QualifiedName ><BED_Refal5P_MCompilerP_GenerateFnBody e.Sentences >;
}

BED_Refal5P_MCompilerP_GenerateFnHeader {
  s.ScopeClass t.QualifiedFnName =
    ('b ' <BED_Refal5P_MCompilerP_XQualifiedToLine s.ScopeClass t.QualifiedFnName >)('c $' <BED_Refal5P_MCompilerP_XQualifiedToLine s.ScopeClass t.QualifiedFnName >'$ {' );
}

$FORWARD BED_Refal5P_MCompilerP_ScopeClassToPrefix;
BED_Refal5P_MCompilerP_XQualifiedToLine {
  s.ScopeClass t.QualifiedName =
    <BED_Refal5P_MCompilerP_HashedName <BED_Refal5P_MCompilerP_ScopeClassToPrefix s.ScopeClass ><BED_Refal5P_MCompilerP_QualifiedToLine t.QualifiedName >>;
}

$FORWARD BED_Refal5P_MCompilerP_HashedNameD_Aux;
$EXTERN BED_Refal5P_MHashP_Hash;
BED_Refal5P_MCompilerP_HashedName {
  e.Name =
    <BED_Refal5P_MCompilerP_HashedNameD_Aux <BED_Refal5P_MHashP_Hash e.Name >>;
}

$EXTERN MStringsP_Symb;
BED_Refal5P_MCompilerP_HashedNameD_Aux {
  e.Name s.Hash =
    e.Name '#' <MStringsP_Symb s.Hash >;
}

$FORWARD BED_Refal5P_MCompilerP_SegmentsToLine;
$EXTERN MQualifiedNameP_Parse;
BED_Refal5P_MCompilerP_QualifiedToLine {
  t.QualifiedFnName =
    <BED_Refal5P_MCompilerP_SegmentsToLine <MQualifiedNameP_Parse t.QualifiedFnName >>;
}

BED_Refal5P_MCompilerP_SegmentsToLine {
  (e.Segment )e.Tail =
    '::' e.Segment <BED_Refal5P_MCompilerP_SegmentsToLine e.Tail >;
  =
    ;
}

$LABEL Entry;
$LABEL Local;
$LABEL ADT;
BED_Refal5P_MCompilerP_ScopeClassToPrefix {
  #Entry =
    'Entry' ;
  #Local =
    'Local' ;
  #Swap =
    'Swap' ;
  #ADT =
    'ADT' ;
}

$FORWARD BED_Refal5P_MCompilerP_GenerateSentences;
BED_Refal5P_MCompilerP_GenerateFnBody {
  =
    ('c NF = NF ; }' )();
  e.Sentences =
    <BED_Refal5P_MCompilerP_GenerateSentences e.Sentences >('c }' )();
}

$FORWARD BED_Refal5P_MCompilerP_GenerateOneSentence;
BED_Refal5P_MCompilerP_GenerateSentences {
  (e.NextSentence )e.Tail =
    <BED_Refal5P_MCompilerP_GenerateOneSentence e.NextSentence ><BED_Refal5P_MCompilerP_GenerateSentences e.Tail >;
  =
    ;
}

$LABEL Pattern;
BED_Refal5P_MCompilerP_GenerateOneSentence {
  (#Pattern e.Pattern )(#Result e.Result )=
    ('c \t' <BED_Refal5P_MCompilerP_GenerateExpression e.Pattern >'=' )('c \t\t' <BED_Refal5P_MCompilerP_GenerateExpression e.Result >';' );
}

$FORWARD BED_Refal5P_MCompilerP_GenerateTerm;
BED_Refal5P_MCompilerP_GenerateExpression {
  t.Term e.Tail =
    <BED_Refal5P_MCompilerP_GenerateTerm t.Term >' ' <BED_Refal5P_MCompilerP_GenerateExpression e.Tail >;
  =
    ;
}

$LABEL Identifier;
$LABEL EVar;
$LABEL SVar;
$LABEL TVar;
$LABEL Literal;
$FORWARD BED_Refal5P_MCompilerP_EscapeText;
$LABEL Macro;
$LABEL Structure;
$LABEL Abstract;
$FORWARD BED_Refal5P_MCompilerP_GenerateCallable;
$LABEL Function;
$LABEL IndirectCall;
$LABEL FnPtr;
BED_Refal5P_MCompilerP_GenerateTerm {
  (#Identifier t.SrcPos e.Name )=
    '$' <BED_Refal5P_MCompilerP_HashedName 'Ident::' e.Name >'$' ;
  (#EVar e.Name )=
    'e.$' <BED_Refal5P_MCompilerP_HashedName 'Index::' e.Name >'$' ;
  (#SVar e.Name )=
    's.$' <BED_Refal5P_MCompilerP_HashedName 'Index::' e.Name >'$' ;
  (#TVar e.Name )=
    't.$' <BED_Refal5P_MCompilerP_HashedName 'Index::' e.Name >'$' ;
  (#Literal e.Content )=
    '\'' <BED_Refal5P_MCompilerP_EscapeText e.Content >'\'' ;
  (#Macro s.Value )=
    <MStringsP_Symb s.Value >;
  (#Structure e.InBrackets )=
    '( $' <BED_Refal5P_MCompilerP_HashedName 'ADT::__StructureBrackets' >'$ ' <BED_Refal5P_MCompilerP_GenerateExpression e.InBrackets >')' ;
  (#Abstract (e.Callable )e.InBrackets )=
    '( ' <BED_Refal5P_MCompilerP_GenerateCallable e.Callable >' ' <BED_Refal5P_MCompilerP_GenerateExpression e.InBrackets >')' ;
  (#Function (e.Callable )e.Argument )=
    '<' <BED_Refal5P_MCompilerP_GenerateCallable e.Callable >' ' <BED_Refal5P_MCompilerP_GenerateExpression e.Argument >'>' ;
  (#IndirectCall (#SVar e.Index )e.Argument )=
    '<Mu s.$' <BED_Refal5P_MCompilerP_HashedName 'Index::' e.Index >'$ ' <BED_Refal5P_MCompilerP_GenerateExpression e.Argument >'>' ;
  (#FnPtr (e.Callable ))=
    <BED_Refal5P_MCompilerP_GenerateCallable e.Callable >;
}

$FORWARD BED_Refal5P_MCompilerP_EscapeChar;
BED_Refal5P_MCompilerP_EscapeText {
  s.Char e.Tail =
    <BED_Refal5P_MCompilerP_EscapeChar s.Char ><BED_Refal5P_MCompilerP_EscapeText e.Tail >;
  =
    ;
}

$EXTERN MEscapeP_EscapeCharD_Hex;
BED_Refal5P_MCompilerP_EscapeChar {
  '$' =
    '$$' ;
  s.Char =
    <MEscapeP_EscapeCharD_Hex s.Char >;
}

BED_Refal5P_MCompilerP_GenerateCallable {
  s.CallType t.SrcPos t.QualifiedFnName =
    '$' <BED_Refal5P_MCompilerP_XQualifiedToLine s.CallType t.QualifiedFnName >'$' ;
}

$EXTERN MProfilerP_Quantify;
$ENTRY BED_Refal5P_MCompilerP_Generate {
  t.IModule e.OutName =
    <MProfilerP_Quantify BED_Refal5P_MCompilerP_ProfiledD_Generate t.IModule e.OutName >;
}

BED_Refal5P_MCompilerP_FinalizeE_ {
  =
    ;
}

$EXTERN RegisterE_;
$ENTRY BED_Refal5P_MCompilerP_EntryPointE_ {
  =
    <RegisterE_ BED_Refal5P_MCompilerP_FinalizeE_ >;
}

