$FORWARD BED_Refal5P_MLinkerP_StartLinkLoop;
$EXTERN MLambdaP_Reduce;
$FORWARD BED_Refal5P_MLinkerP_SortUnits;
$EXTERN MLambdaP_Map;
$FORWARD BED_Refal5P_MLinkerP_LoadUnitsFromModule;
$EXTERN MStringsP_Reverse;
$EXTERN MFileSystemP_StrFromPath;
$EXTERN MProfilerP_Quantify;
$FORWARD BED_Refal5P_MLinkerP_CallRefc;
$LABEL Success;
BED_Refal5P_MLinkerP_ProfiledD_Link {
  (e.PtProgName )e.Modules =
    <BED_Refal5P_MLinkerP_StartLinkLoop <MLambdaP_Reduce BED_Refal5P_MLinkerP_SortUnits (()()())<MLambdaP_Map BED_Refal5P_MLinkerP_LoadUnitsFromModule <MStringsP_Reverse e.Modules >>><MFileSystemP_StrFromPath e.PtProgName >><MProfilerP_Quantify BED_Refal5P_MLinkerP_CallRefc e.PtProgName >#Success ;
}

$FORWARD BED_Refal5P_MLinkerP_LoadUnits;
BED_Refal5P_MLinkerP_LoadUnitsFromModule {
  (t.ModuleName e.ObjName )=
    <BED_Refal5P_MLinkerP_LoadUnits e.ObjName >;
}

$EXTERN MOSP_System;
BED_Refal5P_MLinkerP_CallRefc {
  e.PtProgName =
    <MOSP_System 'refc ' <MFileSystemP_StrFromPath e.PtProgName >'.ref' >;
}

$LABEL EntryPoint;
$LABEL RealName;
BED_Refal5P_MLinkerP_SortUnits {
  ((e.Builtins )(e.Inits )(e.Functions ))(#EntryPoint e.Code )=
    ((e.Builtins )(e.Inits e.Code )(e.Functions ));
  ((e.Builtins )(e.Inits )(e.Functions ))(#RealName (e.MRD_Name )e.R5D_Name )=
    ((e.Builtins (#RealName (e.MRD_Name )e.R5D_Name ))(e.Inits )(e.Functions ));
  ((e.Builtins )(e.Inits )(e.Functions ))t.OtherUnit =
    ((e.Builtins )(e.Inits )(e.Functions t.OtherUnit ));
}

$FORWARD BED_Refal5P_MLinkerP_StopLinkLoop;
$FORWARD BED_Refal5P_MLinkerP_LinkLoop;
$FORWARD BED_Refal5P_MLinkerP_CreateAliasTable;
$FORWARD BED_Refal5P_MLinkerP_CreateExeTyper;
$FORWARD BED_Refal5P_MLinkerP_CreateUnitStorage;
$FORWARD BED_Refal5P_MLinkerP_SelectBuiltInMRName;
$FORWARD BED_Refal5P_MLinkerP_ExitFunctionCode;
$FORWARD BED_Refal5P_MLinkerP_RuntimeCode;
BED_Refal5P_MLinkerP_StartLinkLoop {
  ((e.BuiltIns )(e.InitCode )(e.Units ))e.TargetFileName =
    <BED_Refal5P_MLinkerP_StopLinkLoop <BED_Refal5P_MLinkerP_LinkLoop <BED_Refal5P_MLinkerP_CreateAliasTable e.BuiltIns ><BED_Refal5P_MLinkerP_CreateExeTyper e.TargetFileName ><BED_Refal5P_MLinkerP_CreateUnitStorage (<MLambdaP_Map BED_Refal5P_MLinkerP_SelectBuiltInMRName e.BuiltIns >)<BED_Refal5P_MLinkerP_ExitFunctionCode >e.Units ><BED_Refal5P_MLinkerP_RuntimeCode e.InitCode >>e.TargetFileName >;
}

BED_Refal5P_MLinkerP_SelectBuiltInMRName {
  (#RealName (e.MRD_Name )e.R5D_Name )=
    (e.MRD_Name );
}

$FORWARD BED_Refal5P_MLinkerP_AddBuiltIn;
$EXTERN BED_Refal5P_MLinkerAliasTableP_Create;
BED_Refal5P_MLinkerP_CreateAliasTable {
  e.BuiltIns =
    <MLambdaP_Reduce BED_Refal5P_MLinkerP_AddBuiltIn <BED_Refal5P_MLinkerAliasTableP_Create >e.BuiltIns >;
}

$EXTERN BED_Refal5P_MLinkerAliasTableP_AddBuiltIn;
BED_Refal5P_MLinkerP_AddBuiltIn {
  t.AliasTable (#RealName (e.MRD_Name s.Hash )e.R5D_Name )=
    <BED_Refal5P_MLinkerAliasTableP_AddBuiltIn t.AliasTable (e.MRD_Name s.Hash )e.R5D_Name >;
}

$EXTERN BED_Refal5P_MExeTyperP_Create;
$FORWARD BED_Refal5P_MLinkerP_DefLim;
BED_Refal5P_MLinkerP_CreateExeTyper {
  e.TargetFileName =
    <BED_Refal5P_MExeTyperP_Create <BED_Refal5P_MLinkerP_DefLim >e.TargetFileName '.ref' >;
}

BED_Refal5P_MLinkerP_DefLim {
  =
    64 ;
}

$EXTERN BED_Refal5P_MHashP_Hash;
BED_Refal5P_MLinkerP_Hash {
  e.Line =
    <BED_Refal5P_MHashP_Hash e.Line >;
}

BED_Refal5P_MLinkerP_RuntimeCode {
  e.InitCode =
    ((<BED_Refal5P_MLinkerP_Hash 'Starter' >)('$ENTRY Go { = ' e.InitCode '<' ('$' <BED_Refal5P_MLinkerP_Hash 'Entry::__Exit' >)' 0 >; }' ));
}

BED_Refal5P_MLinkerP_ExitFunctionCode {
  =
    ((<BED_Refal5P_MLinkerP_Hash 'Entry::__Exit' >)('$ENTRY ' ('$' <BED_Refal5P_MLinkerP_Hash 'Entry::__Exit' >)' {' )('  s.' ('$' <BED_Refal5P_MLinkerP_Hash 'Index::RetCode' >)' , <Dg Finalizers >: {' )('    s.' ('$' <BED_Refal5P_MLinkerP_Hash 'Index::NextFinalizer' >)' =' )('      <Mu s.' ('$' <BED_Refal5P_MLinkerP_Hash 'Index::NextFinalizer' >)' >' )('      <' ('$' <BED_Refal5P_MLinkerP_Hash 'Entry::__Exit' >)' s.' ('$' <BED_Refal5P_MLinkerP_Hash 'Index::RetCode' >)' >;' )('    = <Exit s.' ('$' <BED_Refal5P_MLinkerP_Hash 'Index::RetCode' >)' >;' )('  };' )('}' ));
}

$FORWARD BED_Refal5P_MLinkerP_PrintNotLinkedUnits;
$EXTERN BED_Refal5P_MLinkerAliasTableP_OutAliasesD_D;
$EXTERN BED_Refal5P_MExeTyperP_Destroy;
BED_Refal5P_MLinkerP_StopLinkLoop {
  t.AliasTable t.ExeTyper t.UnitStorage e.TargetFileName =
    <BED_Refal5P_MLinkerP_PrintNotLinkedUnits t.UnitStorage e.TargetFileName ><BED_Refal5P_MLinkerAliasTableP_OutAliasesD_D t.AliasTable e.TargetFileName ><BED_Refal5P_MExeTyperP_Destroy t.ExeTyper >;
}

$FORWARD BED_Refal5P_MLinkerP_LinkLoopD_GetNextUnit;
$FORWARD BED_Refal5P_MLinkerP_TypeUnit;
$LABEL Finish;
$LABEL UnresolvedName;
$EXTERN MErrorP_LinkError;
BED_Refal5P_MLinkerP_LinkLoop {
  t.AliasTable t.ExeTyper t.UnitStorage (e.Unit )=
    <BED_Refal5P_MLinkerP_LinkLoopD_GetNextUnit <BED_Refal5P_MLinkerP_TypeUnit t.UnitStorage t.AliasTable t.ExeTyper e.Unit >>;
  t.AliasTable t.ExeTyper t.UnitStorage #Finish =
    t.AliasTable t.ExeTyper t.UnitStorage ;
  t.AliasTable t.ExeTyper t.UnitStorage #UnresolvedName e.Name =
    <MErrorP_LinkError 'Unresolved name ' e.Name >;
}

$FORWARD BED_Refal5P_MLinkerP_GetNextUnit;
BED_Refal5P_MLinkerP_LinkLoopD_GetNextUnit {
  t.AliasTable t.ExeTyper t.UnitStorage =
    <BED_Refal5P_MLinkerP_LinkLoop t.AliasTable t.ExeTyper <BED_Refal5P_MLinkerP_GetNextUnit t.UnitStorage >>;
}

$EXTERN MFileIOP_Save;
$EXTERN MLambdaP_Composite;
$EXTERN MLambdaP_UnBracket;
$EXTERN MLambdaP_BindLeft;
$EXTERN MLambdaP_Bracket;
$EXTERN MOrderP_Sort;
$FORWARD BED_Refal5P_MLinkerP_NotLinkedListD_D;
BED_Refal5P_MLinkerP_PrintNotLinkedUnits {
  t.UnitStorage e.TargetFileName =
    <MFileIOP_Save (e.TargetFileName '-Not linked.txt' )('Not linked units' )<MLambdaP_Map <MLambdaP_Composite MLambdaP_UnBracket <MLambdaP_BindLeft MLambdaP_Bracket '  ' >><MOrderP_Sort <BED_Refal5P_MLinkerP_NotLinkedListD_D t.UnitStorage >>>>;
}

$ENUM BED_Refal5P_MLinkerP_UnitStorage;
$LABEL Requests;
$FORWARD BED_Refal5P_MLinkerP_AddUnit;
$LABEL Units;
$FORWARD BED_Refal5P_MLinkerP_AddLinkedD_Aux;
$LABEL Linked;
BED_Refal5P_MLinkerP_CreateUnitStorage {
  (e.BuiltIns )e.Units =
    [BED_Refal5P_MLinkerP_UnitStorage (#Requests )<MLambdaP_Reduce BED_Refal5P_MLinkerP_AddUnit (#Units )e.Units ><MLambdaP_Reduce BED_Refal5P_MLinkerP_AddLinkedD_Aux (#Linked )e.BuiltIns >];
}

BED_Refal5P_MLinkerP_AddUnit {
  (#Units e.HashGroupsD_B (s.Hash e.Units )e.HashGroupsD_E )((e.Name s.Hash )e.Body )=
    (#Units e.HashGroupsD_B (s.Hash e.Units ((e.Name )e.Body ))e.HashGroupsD_E );
  (#Units e.HashGroups )((e.Name s.Hash )e.Body )=
    (#Units e.HashGroups (s.Hash ((e.Name )e.Body )));
}

$FORWARD BED_Refal5P_MLinkerP_AddRequestAux;
BED_Refal5P_MLinkerP_AddRequest {
  t.UnitStorage 'Entry::' e.Name =
    <BED_Refal5P_MLinkerP_AddRequestAux t.UnitStorage 'Entry::' e.Name >;
  t.UnitStorage 'Local::' e.Name =
    <BED_Refal5P_MLinkerP_AddRequestAux t.UnitStorage 'Local::' e.Name >;
  t.UnitStorage 'Swap::' e.Name =
    <BED_Refal5P_MLinkerP_AddRequestAux t.UnitStorage 'Swap::' e.Name >;
  t.UnitStorage e.OtherName =
    t.UnitStorage ;
}

BED_Refal5P_MLinkerP_AddRequestAux {
  [BED_Refal5P_MLinkerP_UnitStorage t.Request t.Units (#Linked e.HashGroupsD_B (s.Hash e.NamesD_B (e.Name )e.NamesD_E )e.HashGroupsD_E )]e.Name s.Hash =
    [BED_Refal5P_MLinkerP_UnitStorage t.Request t.Units (#Linked (s.Hash (e.Name )e.NamesD_B e.NamesD_E )e.HashGroupsD_B e.HashGroupsD_E )];
  [BED_Refal5P_MLinkerP_UnitStorage (#Requests e.RequestsD_B (e.Name )e.RequestsD_E )t.Units t.Linked ]e.Name =
    [BED_Refal5P_MLinkerP_UnitStorage (#Requests (e.Name )e.RequestsD_B e.RequestsD_E )t.Units t.Linked ];
  [BED_Refal5P_MLinkerP_UnitStorage (#Requests e.Requests )t.Units t.Linked ]e.Name =
    [BED_Refal5P_MLinkerP_UnitStorage (#Requests (e.Name )e.Requests )t.Units t.Linked ];
}

BED_Refal5P_MLinkerP_AddLinked {
  [BED_Refal5P_MLinkerP_UnitStorage t.Requests t.Units (#Linked e.Linked )]e.Name s.Hash =
    [BED_Refal5P_MLinkerP_UnitStorage t.Requests t.Units <BED_Refal5P_MLinkerP_AddLinkedD_Aux (#Linked e.Linked )(e.Name s.Hash )>];
}

BED_Refal5P_MLinkerP_AddLinkedD_Aux {
  (#Linked e.HashGroupsD_B (s.Hash e.Names )e.HashGroupsD_E )(e.Name s.Hash )=
    (#Linked (s.Hash (e.Name )e.Names )e.HashGroupsD_B e.HashGroupsD_E );
  (#Linked e.HashGroups )(e.Name s.Hash )=
    (#Linked (s.Hash (e.Name ))e.HashGroups );
}

BED_Refal5P_MLinkerP_GetNextUnit {
  [BED_Refal5P_MLinkerP_UnitStorage (#Requests )t.Units t.Linked ]=
    [BED_Refal5P_MLinkerP_UnitStorage (#Requests )t.Units t.Linked ]#Finish ;
  [BED_Refal5P_MLinkerP_UnitStorage (#Requests (e.NextName s.Hash )e.Requests )(#Units e.HashGroupsD_B (s.Hash e.UnitsD_B ((e.NextName )e.Body )e.UnitsD_E )e.HashGroupsD_E )t.Linked ]=
    [BED_Refal5P_MLinkerP_UnitStorage (#Requests e.Requests )(#Units e.HashGroupsD_B (s.Hash e.UnitsD_B e.UnitsD_E )e.HashGroupsD_E )t.Linked ]((e.NextName s.Hash )e.Body );
  [BED_Refal5P_MLinkerP_UnitStorage (#Requests (e.NextName s.Hash )e.Requests )t.Units t.Linked ]=
    [BED_Refal5P_MLinkerP_UnitStorage (#Requests (e.NextName s.Hash )e.Requests )t.Units t.Linked ]#UnresolvedName e.NextName ;
}

$FORWARD BED_Refal5P_MLinkerP_NameFromUnit;
BED_Refal5P_MLinkerP_NotLinkedListD_D {
  [BED_Refal5P_MLinkerP_UnitStorage t.Requests (#Units e.Units )t.Linked ]=
    <BED_Refal5P_MLinkerP_NameFromUnit e.Units >;
}

BED_Refal5P_MLinkerP_NameFromUnit {
  (s.Hash ((e.Name )e.Body )e.Units )e.HashGroups =
    (e.Name )<BED_Refal5P_MLinkerP_NameFromUnit (s.Hash e.Units )e.HashGroups >;
  (s.Hash )e.HashGroups =
    <BED_Refal5P_MLinkerP_NameFromUnit e.HashGroups >;
  =
    ;
}

$FORWARD BED_Refal5P_MLinkerP_GroupLinkUnits;
$EXTERN MVersionP_ROut;
$FORWARD BED_Refal5P_MLinkerP_DoLoadUnits;
$EXTERN MFileIOP_Load;
BED_Refal5P_MLinkerP_LoadUnits {
  e.FileName =
    <BED_Refal5P_MLinkerP_GroupLinkUnits (e.FileName )(<MVersionP_ROut >)<BED_Refal5P_MLinkerP_DoLoadUnits <MFileIOP_Load e.FileName >>>;
}

$LABEL Version;
$FORWARD BED_Refal5P_MLinkerP_DoGroupLinkUnits;
BED_Refal5P_MLinkerP_GroupLinkUnits {
  (e.Q_FileName )(e.ValidVersion )(#Version e.ValidVersion )e.Lines =
    <BED_Refal5P_MLinkerP_DoGroupLinkUnits e.Lines >;
  (e.FileName )(e.ValidVersion )(#Version e.InvalidVersion )e.Q_Lines =
    <MErrorP_LinkError 'Invalid version in .rout-file `' e.FileName '\'' >;
  (e.FileName )(e.Q_ValidVersion )e.Q_OtherLines =
    <MErrorP_LinkError 'Invalid .rout-file `' e.FileName '\' -- missed version tag' >;
}

$LABEL Banner;
$FORWARD BED_Refal5P_MLinkerP_GroupOneLinkUnit;
BED_Refal5P_MLinkerP_DoGroupLinkUnits {
  (#Banner e.Banner )e.Lines =
    <BED_Refal5P_MLinkerP_GroupOneLinkUnit ((e.Banner ))e.Lines >;
  (#EntryPoint e.Code )e.Lines =
    (#EntryPoint e.Code )<BED_Refal5P_MLinkerP_DoGroupLinkUnits e.Lines >;
  =
    ;
}

$LABEL Code;
BED_Refal5P_MLinkerP_GroupOneLinkUnit {
  (e.Unit )(#Code e.CodeLine )e.Lines =
    <BED_Refal5P_MLinkerP_GroupOneLinkUnit (e.Unit (e.CodeLine ))e.Lines >;
  ((e.Banner ))(#RealName e.RealName )e.Lines =
    (#RealName (e.Banner )e.RealName )<BED_Refal5P_MLinkerP_DoGroupLinkUnits e.Lines >;
  (e.Unit )t.OtherLine e.Lines =
    (e.Unit )<BED_Refal5P_MLinkerP_DoGroupLinkUnits t.OtherLine e.Lines >;
  (e.Unit )=
    (e.Unit );
}

$FORWARD BED_Refal5P_MLinkerP_AnalyseLine;
BED_Refal5P_MLinkerP_DoLoadUnits {
  =
    ;
  (e.NextLine )e.Lines =
    <BED_Refal5P_MLinkerP_AnalyseLine (e.NextLine )><BED_Refal5P_MLinkerP_DoLoadUnits e.Lines >;
}

$FORWARD BED_Refal5P_MLinkerP_GetHash;
$FORWARD BED_Refal5P_MLinkerP_HideQuotes;
BED_Refal5P_MLinkerP_AnalyseLine {
  ('v ' e.Version )=
    (#Version e.Version );
  ('b ' e.BannerLine )=
    (#Banner <BED_Refal5P_MLinkerP_GetHash e.BannerLine >);
  ('r ' e.Q_RemarkLine )=
    ;
  ('c ' e.CodeLine )=
    (#Code <BED_Refal5P_MLinkerP_HideQuotes e.CodeLine >);
  ('p ' e.RealName )=
    (#RealName e.RealName );
  ('e ' e.EntryPointCode )=
    (#EntryPoint <BED_Refal5P_MLinkerP_HideQuotes e.EntryPointCode >);
  ()=
    ;
}

$FORWARD BED_Refal5P_MLinkerP_StartHidingQuote;
BED_Refal5P_MLinkerP_HideQuotes {
  '\'' e.Tail =
    <BED_Refal5P_MLinkerP_StartHidingQuote ('\'' )e.Tail >;
  '\"' e.Tail =
    <BED_Refal5P_MLinkerP_StartHidingQuote ('\"' )e.Tail >;
  '$$' e.Tail =
    '$' <BED_Refal5P_MLinkerP_HideQuotes e.Tail >;
  '$' e.Name '$' e.Tail =
    ('$' <BED_Refal5P_MLinkerP_GetHash e.Name >)<BED_Refal5P_MLinkerP_HideQuotes e.Tail >;
  s.Other e.Tail =
    s.Other <BED_Refal5P_MLinkerP_HideQuotes e.Tail >;
  =
    ;
}

$EXTERN MStringsP_Numb;
BED_Refal5P_MLinkerP_GetHash {
  e.Name '#' e.Hash =
    e.Name <MStringsP_Numb e.Hash >;
  e.Name =
    <BED_Refal5P_MHashP_Hash e.Name >;
}

BED_Refal5P_MLinkerP_StartHidingQuote {
  (s.Quote e.Hidden )'\\' s.Escaped e.Tail =
    <BED_Refal5P_MLinkerP_StartHidingQuote (s.Quote e.Hidden '\\' s.Escaped )e.Tail >;
  (s.Quote e.Hidden )s.Quote e.Tail =
    (s.Quote e.Hidden )<BED_Refal5P_MLinkerP_HideQuotes e.Tail >;
  (s.Quote e.Hidden )s.Other e.Tail =
    <BED_Refal5P_MLinkerP_StartHidingQuote (s.Quote e.Hidden s.Other )e.Tail >;
  (s.Quote e.Hidden )=
    <MErrorP_LinkError 'May be unballanced quote in StartHidingQoute' >;
}

$FORWARD BED_Refal5P_MLinkerP_DoTypeUnit;
$EXTERN BED_Refal5P_MExeTyperP_TypeComment;
$EXTERN MStringsP_Symb;
BED_Refal5P_MLinkerP_TypeUnit {
  t.UnitStorage t.Aliases t.ExeTyper (e.Banner s.Hash )e.Lines =
    <BED_Refal5P_MLinkerP_DoTypeUnit <BED_Refal5P_MLinkerP_AddLinked t.UnitStorage e.Banner s.Hash >t.Aliases <BED_Refal5P_MExeTyperP_TypeComment t.ExeTyper e.Banner '#' <MStringsP_Symb s.Hash >>e.Lines >;
}

$FORWARD BED_Refal5P_MLinkerP_TypeLine;
BED_Refal5P_MLinkerP_DoTypeUnit {
  t.UnitStorage t.Aliases t.ExeTyper =
    t.Aliases t.ExeTyper t.UnitStorage ;
  t.UnitStorage t.Aliases t.ExeTyper (e.NextLine )e.Lines =
    <BED_Refal5P_MLinkerP_DoTypeUnit <BED_Refal5P_MLinkerP_TypeLine t.UnitStorage t.Aliases t.ExeTyper e.NextLine >e.Lines >;
}

$EXTERN BED_Refal5P_MExeTyperP_TypeChar;
$FORWARD BED_Refal5P_MLinkerP_TypeRenamed;
$EXTERN BED_Refal5P_MLinkerAliasTableP_Lookup;
$EXTERN BED_Refal5P_MExeTyperP_TypeSingleQuoted;
$EXTERN BED_Refal5P_MExeTyperP_TypeDoubleQuoted;
BED_Refal5P_MLinkerP_TypeLine {
  t.UnitStorage t.Aliases t.ExeTyper s.Char e.Raw =
    <BED_Refal5P_MLinkerP_TypeLine t.UnitStorage t.Aliases <BED_Refal5P_MExeTyperP_TypeChar t.ExeTyper s.Char >e.Raw >;
  t.UnitStorage t.Aliases t.ExeTyper ('$' e.FnName s.Hash )e.Raw =
    <BED_Refal5P_MLinkerP_TypeLine <BED_Refal5P_MLinkerP_AddRequest t.UnitStorage e.FnName s.Hash ><BED_Refal5P_MLinkerP_TypeRenamed (<BED_Refal5P_MLinkerAliasTableP_Lookup t.Aliases e.FnName s.Hash >)t.ExeTyper e.Raw >>;
  t.UnitStorage t.Aliases t.ExeTyper ('\'' e.HiddenQuote )e.Raw =
    <BED_Refal5P_MLinkerP_TypeLine t.UnitStorage t.Aliases <BED_Refal5P_MExeTyperP_TypeSingleQuoted t.ExeTyper e.HiddenQuote >e.Raw >;
  t.UnitStorage t.Aliases t.ExeTyper ('\"' e.HiddenQuote )e.Raw =
    <BED_Refal5P_MLinkerP_TypeLine t.UnitStorage t.Aliases <BED_Refal5P_MExeTyperP_TypeDoubleQuoted t.ExeTyper e.HiddenQuote >e.Raw >;
  t.UnitStorage t.Aliases t.ExeTyper =
    t.UnitStorage t.Aliases t.ExeTyper ;
}

$EXTERN BED_Refal5P_MExeTyperP_TypeRenamed;
BED_Refal5P_MLinkerP_TypeRenamed {
  (t.Aliases e.FnAlias )t.ExeTyper e.Raw =
    t.Aliases <BED_Refal5P_MExeTyperP_TypeRenamed t.ExeTyper e.FnAlias >e.Raw ;
}

$ENTRY BED_Refal5P_MLinkerP_Link {
  (e.ProgName )e.Modules =
    <MProfilerP_Quantify BED_Refal5P_MLinkerP_ProfiledD_Link (e.ProgName )e.Modules >;
}

BED_Refal5P_MLinkerP_FinalizeE_ {
  =
    ;
}

$EXTERN RegisterE_;
$ENTRY BED_Refal5P_MLinkerP_EntryPointE_ {
  =
    <RegisterE_ BED_Refal5P_MLinkerP_FinalizeE_ >;
}

