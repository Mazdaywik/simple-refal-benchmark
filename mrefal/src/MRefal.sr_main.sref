

$SWAP G_Finalizers;

$ENTRY RegisterE_ {
  s.Finalizer =
    <G_Finalizers s.Finalizer <G_Finalizers>>;
}

$EXTERN MRefalP_EntryPointE_;
$EXTERN ConfigP_MLoadP_EntryPointE_;
$EXTERN BED_CppSRP_MInitP_EntryPointE_;
$EXTERN BED_CppSRP_MCompilerP_EntryPointE_;
$EXTERN BED_CppSRP_AlgorithmP_EntryPointE_;
$EXTERN BED_CppSRP_GeneratorP_EntryPointE_;
$EXTERN BED_CppSRP_MLinkerP_EntryPointE_;
$EXTERN CD_LinkP_MMakeP_EntryPointE_;
$EXTERN CD_LinkP_MPartialLinkerP_EntryPointE_;
$EXTERN BED_ModuleIFP_MInitP_EntryPointE_;
$EXTERN BED_ModuleIFP_MCompilerP_EntryPointE_;
$EXTERN BED_Refal5P_MInitP_EntryPointE_;
$EXTERN BED_Refal5P_MCompilerP_EntryPointE_;
$EXTERN BED_Refal5P_MLinkerP_EntryPointE_;
$EXTERN BED_Refal5P_MExeTyperP_EntryPointE_;
$EXTERN BED_Refal5P_MLinkerAliasTableP_EntryPointE_;
$EXTERN BED_SimRefP_MInitP_EntryPointE_;
$EXTERN BED_SimRefP_MCompilerP_EntryPointE_;
$EXTERN BED_SimRefP_MLinkerP_EntryPointE_;
$EXTERN BED_XLinxP_MInitP_EntryPointE_;
$EXTERN BED_XLinxP_MCompilerP_EntryPointE_;
$EXTERN BED_XLinxP_MLinkerP_EntryPointE_;
$EXTERN FED_MRefalP_MInitP_EntryPointE_;
$EXTERN FED_MRefalP_MParserU_MRefalP_EntryPointE_;
$EXTERN FED_MRefalP_MVarTableP_EntryPointE_;
$EXTERN DriverP_MCompilerP_EntryPointE_;
$EXTERN DriverP_MConfigP_EntryPointE_;
$EXTERN DriverP_MClustersP_EntryPointE_;
$EXTERN DriverP_MModuleFinderP_EntryPointE_;
$EXTERN DriverP_MResolverP_EntryPointE_;
$EXTERN DriverP_MResolveTableP_EntryPointE_;
$EXTERN DriverP_TablesP_MLookupP_EntryPointE_;
$EXTERN DriverP_TablesP_MModuleTreeP_EntryPointE_;
$EXTERN ConfigP_MHelpersP_EntryPointE_;
$EXTERN CmdLineP_MParserP_EntryPointE_;
$EXTERN MPredeclGeneratorP_EntryPointE_;
$EXTERN CD_LinkP_MLinkerP_EntryPointE_;
$EXTERN MCreateDirIfNeedP_EntryPointE_;
$EXTERN BED_Refal5P_MHashP_EntryPointE_;
$EXTERN MVersionP_EntryPointE_;
$EXTERN MXXIOP_EntryPointE_;
$EXTERN DriverP_MModuleIFP_EntryPointE_;
$EXTERN DriverP_MUtilsP_EntryPointE_;
$EXTERN FED_MRefalP_MParserU_SymP_EntryPointE_;
$EXTERN ConfigP_MConfigP_EntryPointE_;
$EXTERN FED_MRefalP_MParserU_CommonP_EntryPointE_;
$EXTERN DriverP_MContextP_EntryPointE_;
$EXTERN DriverP_MTablesP_EntryPointE_;
$EXTERN DriverP_TablesP_MModulesP_EntryPointE_;
$EXTERN MErrorP_EntryPointE_;
$EXTERN MOSP_EntryPointE_;
$EXTERN CoreBEP_MOSP_EntryPointE_;
$EXTERN CoreBEP_OSP_MOSP_EntryPointE_;
$EXTERN FED_MRefalP_MLexerP_EntryPointE_;
$EXTERN MEscapeP_EntryPointE_;
$EXTERN MOrderP_EntryPointE_;
$EXTERN CoreBEP_MOrderP_EntryPointE_;
$EXTERN MSrcPosP_EntryPointE_;
$EXTERN MProfilerP_EntryPointE_;
$EXTERN CoreBEP_MProfilerP_EntryPointE_;
$EXTERN MOutModuleStatusP_EntryPointE_;
$EXTERN MSwapSupportP_EntryPointE_;
$EXTERN MIModuleP_EntryPointE_;
$EXTERN MSymTableP_EntryPointE_;
$EXTERN MFileSystemP_EntryPointE_;
$EXTERN CoreBEP_MFileSystemP_EntryPointE_;
$EXTERN CoreBEP_MExistFileP_EntryPointE_;
$EXTERN CoreOSP_MFSPathP_EntryPointE_;
$EXTERN MQualifiedNameP_EntryPointE_;
$EXTERN MSelfDiagP_EntryPointE_;
$EXTERN CoreBEP_MSelfDiagP_EntryPointE_;
$EXTERN MFileIOP_EntryPointE_;
$EXTERN MInOutP_EntryPointE_;
$EXTERN MStringsP_EntryPointE_;
$EXTERN CoreBEP_MStringsP_EntryPointE_;
$EXTERN MMathP_EntryPointE_;
$EXTERN CoreBEP_MathP_EntryPointE_;
$EXTERN CoreBEP_OSP_MFileSystemP_EntryPointE_;
$EXTERN CoreBEP_MFileIOP_EntryPointE_;
$EXTERN MLambdaP_EntryPointE_;

$ENTRY Go { =
  <MLambdaP_EntryPointE_>
  <CoreBEP_MFileIOP_EntryPointE_>
  <CoreBEP_OSP_MFileSystemP_EntryPointE_>
  <CoreBEP_MathP_EntryPointE_>
  <MMathP_EntryPointE_>
  <CoreBEP_MStringsP_EntryPointE_>
  <MStringsP_EntryPointE_>
  <MInOutP_EntryPointE_>
  <MFileIOP_EntryPointE_>
  <CoreBEP_MSelfDiagP_EntryPointE_>
  <MSelfDiagP_EntryPointE_>
  <MQualifiedNameP_EntryPointE_>
  <CoreOSP_MFSPathP_EntryPointE_>
  <CoreBEP_MExistFileP_EntryPointE_>
  <CoreBEP_MFileSystemP_EntryPointE_>
  <MFileSystemP_EntryPointE_>
  <MSymTableP_EntryPointE_>
  <MIModuleP_EntryPointE_>
  <MSwapSupportP_EntryPointE_>
  <MOutModuleStatusP_EntryPointE_>
  <CoreBEP_MProfilerP_EntryPointE_>
  <MProfilerP_EntryPointE_>
  <MSrcPosP_EntryPointE_>
  <CoreBEP_MOrderP_EntryPointE_>
  <MOrderP_EntryPointE_>
  <MEscapeP_EntryPointE_>
  <FED_MRefalP_MLexerP_EntryPointE_>
  <CoreBEP_OSP_MOSP_EntryPointE_>
  <CoreBEP_MOSP_EntryPointE_>
  <MOSP_EntryPointE_>
  <MErrorP_EntryPointE_>
  <DriverP_TablesP_MModulesP_EntryPointE_>
  <DriverP_MTablesP_EntryPointE_>
  <DriverP_MContextP_EntryPointE_>
  <FED_MRefalP_MParserU_CommonP_EntryPointE_>
  <ConfigP_MConfigP_EntryPointE_>
  <FED_MRefalP_MParserU_SymP_EntryPointE_>
  <DriverP_MUtilsP_EntryPointE_>
  <DriverP_MModuleIFP_EntryPointE_>
  <MXXIOP_EntryPointE_>
  <MVersionP_EntryPointE_>
  <BED_Refal5P_MHashP_EntryPointE_>
  <MCreateDirIfNeedP_EntryPointE_>
  <CD_LinkP_MLinkerP_EntryPointE_>
  <MPredeclGeneratorP_EntryPointE_>
  <CmdLineP_MParserP_EntryPointE_>
  <ConfigP_MHelpersP_EntryPointE_>
  <DriverP_TablesP_MModuleTreeP_EntryPointE_>
  <DriverP_TablesP_MLookupP_EntryPointE_>
  <DriverP_MResolveTableP_EntryPointE_>
  <DriverP_MResolverP_EntryPointE_>
  <DriverP_MModuleFinderP_EntryPointE_>
  <DriverP_MClustersP_EntryPointE_>
  <DriverP_MConfigP_EntryPointE_>
  <DriverP_MCompilerP_EntryPointE_>
  <FED_MRefalP_MVarTableP_EntryPointE_>
  <FED_MRefalP_MParserU_MRefalP_EntryPointE_>
  <FED_MRefalP_MInitP_EntryPointE_>
  <BED_XLinxP_MLinkerP_EntryPointE_>
  <BED_XLinxP_MCompilerP_EntryPointE_>
  <BED_XLinxP_MInitP_EntryPointE_>
  <BED_SimRefP_MLinkerP_EntryPointE_>
  <BED_SimRefP_MCompilerP_EntryPointE_>
  <BED_SimRefP_MInitP_EntryPointE_>
  <BED_Refal5P_MLinkerAliasTableP_EntryPointE_>
  <BED_Refal5P_MExeTyperP_EntryPointE_>
  <BED_Refal5P_MLinkerP_EntryPointE_>
  <BED_Refal5P_MCompilerP_EntryPointE_>
  <BED_Refal5P_MInitP_EntryPointE_>
  <BED_ModuleIFP_MCompilerP_EntryPointE_>
  <BED_ModuleIFP_MInitP_EntryPointE_>
  <CD_LinkP_MPartialLinkerP_EntryPointE_>
  <CD_LinkP_MMakeP_EntryPointE_>
  <BED_CppSRP_MLinkerP_EntryPointE_>
  <BED_CppSRP_GeneratorP_EntryPointE_>
  <BED_CppSRP_AlgorithmP_EntryPointE_>
  <BED_CppSRP_MCompilerP_EntryPointE_>
  <BED_CppSRP_MInitP_EntryPointE_>
  <ConfigP_MLoadP_EntryPointE_>
  <MRefalP_EntryPointE_>
  ;
}

$EXTERN Exit;

$ENTRY ExitE_ {
  s.Code =
    <
      {
        s.NextFinalizer e.Finalizers =
          <G_Finalizers e.Finalizers>
          <s.NextFinalizer>
          <ExitE_ s.Code>;

        /* пусто */ = <Exit s.Code>;
      }
      <G_Finalizers>
    >;
}
